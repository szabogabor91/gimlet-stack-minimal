---
name: Gimlet Stack Minimal
description: A minimal stack that we can use to experience the stack authoring process
categories:
  - name: "‚¨ÖÔ∏èIngress"
    id: ingress
  - name: "üìë Logging"
    id: logging
components:
  - name: Nginx
    variable: nginx
    category: ingress
    logo: https://raw.githubusercontent.com/gimlet-io/gimlet-stack-reference/main/assets/nginx.png
    description: ''
    onePager: An Nginx proxy server that routes traffic to your applications based on
      the host name or path.
    schema: |-
      {
        "$schema": "http://json-schema.org/draft-07/schema",
        "$id": "http://example.com/example.json",
        "type": "object",
        "title": "The root schema",
        "description": "The root schema comprises the entire JSON document.",
        "properties": {
          "enabled": {
            "$id": "#/properties/enabled",
            "type": "boolean",
            "title": "Enabled"
          },
          "host": {
            "$id": "#/properties/host",
            "type": "string",
            "title": "Host",
            "description": "Your company domain you will expose your services on",
            "default": "",
            "examples": [
              "mycompany.com"
            ]
          }
        }
      }
    uiSchema: |-
      [
        {
          "schemaIDs": [
            "#/properties/enabled",
            "#/properties/host"
          ],
          "uiSchema": {},
          "metaData": {}
        }
      ]
  - name: Loki
    variable: loki
    category: logging
    logo: https://raw.githubusercontent.com/gimlet-io/gimlet-stack-reference/main/assets/loki.png
    description: ''
    onePager: ''
    schema: |-
      {
        "$schema": "http://json-schema.org/draft-07/schema",
        "$id": "http://example.com/example.json",
        "type": "object",
        "title": "The root schema",
        "description": "The root schema comprises the entire JSON document.",
        "properties": {
          "enabled": {
            "$id": "#/properties/enabled",
            "type": "boolean",
            "title": "Enabled"
          }
        }
      }
    uiSchema: |-
      [
        {
        "schemaIDs": [
          "#/properties/enabled"
        ],
        "uiSchema": {},
        "metaData": {}
        }
      ]
